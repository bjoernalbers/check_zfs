#!/usr/bin/env ruby -w
require 'nagiosplugin'

class ZFS < NagiosPlugin::Plugin
  def zpools
    out = `zpool list -H -o name,health 2>&1`
    raise out unless $?.success?
    out.split("\n")
  end
  
  def health_by_pool
    @health_by_pool ||= zpools.inject({}) do |pools,line|
      name, health = line.split("\t")
      pools[name] = health
      pools
    end
  end
  
  def pools(health = nil)
    (health && health_by_pool.select { |p,h| h == health.to_s.upcase } ) || health_by_pool
  end
  
  def critical?
    !pools(:faulted).empty?
  end

  def warning?
    !pools(:degraded).empty?
  end

  def ok?
    pools(:online).count == pools.count
  end

  def output
    s = []
    [:faulted, :degraded, :online].each do |health|
      s << "#{pools(health).count} #{health.to_s.upcase}" unless pools(health).empty?
    end
    s.join(", ")
  end
end

ZFS.check!
